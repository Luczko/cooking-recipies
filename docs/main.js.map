{"version":3,"sources":["./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/country/country.component.ts","./src/app/country/country.component.html","./src/app/recipe/recipe.component.ts","./src/app/recipe/recipe.component.html","./src/app/categories/categories.component.ts","./src/app/categories/categories.component.html","./src/app/navi/navi.component.ts","./src/app/navi/navi.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/recipe.service.ts","./src/app/category/category.component.ts","./src/app/category/category.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/app-routing.module.ts","./src/app/countries/countries.component.ts","./src/app/countries/countries.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { fromEvent, Observable } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  switchMap,\n} from 'rxjs/operators';\nimport { Recipies } from '../models/recipies';\nimport { RecipeService } from '../services/recipe.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n  recipies$: Observable<Recipies[]>;\n  value = '';\n\n  @ViewChild('searchInput', { static: true }) input: ElementRef;\n\n  constructor(private http: RecipeService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.recipies$ = fromEvent<any>(this.input.nativeElement, 'keyup').pipe(\n      map((event) => event.target.value),\n      debounceTime(400),\n      distinctUntilChanged(),\n      switchMap((search) =>\n        this.http.getRecipiesByName(search).pipe(\n          // tap(console.log),\n          map((e) => e.meals)\n        )\n      )\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"head\">\n    <h1>Welcome to cooking recipies!</h1>\n    <p>\n      Place where You can easily find ideas and inspirations for Your dinner\n      from all over the world. You can search by category or country of origin.\n      Or You can just type below what would You like to eat today!\n    </p>\n    <p>\n      This project is still in development. Fell free to check my other projects\n      at github.com/Luczko.\n    </p>\n  </div>\n  <div class=\"form\">\n    <mat-form-field class=\"form-field\">\n      <input\n        matInput\n        placeholder=\"Type your favourite meal!\"\n        #searchInput\n        autocomplete=\"off\"\n        [(ngModel)]=\"value\"\n      />\n      <button\n        *ngIf=\"value\"\n        matSuffix\n        mat-icon-button\n        aria-label=\"Clear\"\n        (click)=\"value = ''\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n  </div>\n</div>\n\n<div class=\"grid\" *ngIf=\"value && (recipies$ | async) as recipies\">\n  <mat-card\n    class=\"recipe-card\"\n    *ngFor=\"let item of recipies\"\n    [routerLink]=\"['/recipe', item.strMeal]\"\n  >\n    <mat-card-header class=\"recipe-header\">\n      <mat-card-title>{{ item.strMeal }}</mat-card-title>\n    </mat-card-header>\n    <img mat-card-image src=\"{{ item.strMealThumb }}\" />\n  </mat-card>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Recipies } from '../models/recipies';\nimport { RecipeService } from '../services/recipe.service';\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css'],\n})\nexport class CountryComponent implements OnInit {\n  constructor(private http: RecipeService, private route: ActivatedRoute) {}\n  recipies$: Observable<Recipies[]>;\n\n  ngOnInit(): void {\n    const category = this.route.snapshot.paramMap.get('category');\n    const test = this.http.getRecipiesByCategory(category);\n\n    this.recipies$ = test.pipe(map((e) => e.meals));\n  }\n}\n","<p>country works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Recipe } from '../models/recipe';\nimport { RecipeService } from '../services/recipe.service';\n\n@Component({\n  selector: 'app-recipe',\n  templateUrl: './recipe.component.html',\n  styleUrls: ['./recipe.component.css'],\n})\nexport class RecipeComponent implements OnInit {\n  recipe$: Observable<Recipe[]>;\n  singleRecipe: Recipe;\n  single: any;\n  constructor(private http: RecipeService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    const name = this.route.snapshot.paramMap.get('name');\n    const test = this.http.getRecipiesByName(name);\n\n    test\n      .pipe(\n        tap(console.log),\n        map((e) => e.meals)\n      )\n      .subscribe((e: Recipe[]) => (this.singleRecipe = e[0]));\n  }\n}\n","<div class=\"grid\">\n  <mat-card class=\"recipe-card\">\n    <mat-card-header>\n      <!-- <div mat-card-avatar class=\"recipe-header-image\"></div> -->\n      <mat-card-title>{{ singleRecipe?.strMeal }}</mat-card-title>\n    </mat-card-header>\n    <img mat-card-image src=\"{{ singleRecipe?.strMealThumb }}\" />\n    <mat-card-content class=\"recipe-content\">\n      <p>{{ singleRecipe?.strInstructions }}</p></mat-card-content\n    >\n  </mat-card>\n</div>\n","import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RecipeService } from '../services/recipe.service';\nimport { Category } from '../models/category';\nimport {\n  catchError,\n  delayWhen,\n  map,\n  retryWhen,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css'],\n})\nexport class CategoriesComponent implements OnInit {\n  categories$: Observable<Category[]>;\n  length = false;\n  constructor(private http: RecipeService) {}\n\n  // showRecipies(): void {\n  //   this.http\n  //     .getCategories()\n  //     .subscribe((data: Category[]) => (this.categories = { ...data }));\n  // }\n\n  changeLength(): void {\n    this.length = !this.length;\n  }\n\n  ngOnInit(): void {\n    const test = this.http.getCategories();\n\n    this.categories$ = test.pipe(\n      //  tap(console.log)\n      map((e) => e.categories)\n    );\n  }\n}\n","<div class=\"grid\">\n  <mat-card class=\"recipe-card\" *ngFor=\"let item of categories$ | async\">\n    <mat-card-header class=\"recipe-header\">\n      <!-- <div mat-card-avatar class=\"recipe-header-image\"></div> -->\n      <mat-card-title [routerLink]=\"['/category', 'c=' + item.strCategory]\">{{\n        item.strCategory\n      }}</mat-card-title>\n    </mat-card-header>\n    <img\n      [routerLink]=\"['/category', 'c=' + item.strCategory]\"\n      mat-card-image\n      src=\"{{ item.strCategoryThumb }}\"\n    />\n    <mat-card-content class=\"recipe-content\">\n      <p *ngIf=\"!length\">\n        {{\n          (item.strCategoryDescription | slice: 0:70) +\n            (item.strCategoryDescription.length > 70 ? \"...\" : \"\")\n        }}\n      </p>\n      <p *ngIf=\"length\">\n        {{ item.strCategoryDescription }}\n      </p>\n      <span (click)=\"changeLength()\">read more</span></mat-card-content\n    >\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navi',\n  templateUrl: './navi.component.html',\n  styleUrls: ['./navi.component.css']\n})\nexport class NaviComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"navigation\">\r\n  <ul class=\"navi\">\r\n    <li routerLink=\"/about\" routerLinkActive=\"active\">About</li>\r\n    <li routerLink=\"/countries\" routerLinkActive=\"active\">Countries</li>\r\n    <li routerLink=\"/categories\" routerLinkActive=\"active\">Categories</li>\r\n    <li routerLink=\"/home\" routerLinkActive=\"active\">Home</li>\r\n  </ul>\r\n</div>\r\n<div class=\"mobile\">\r\n  <button\r\n    mat-icon-button\r\n    [matMenuTriggerFor]=\"menu\"\r\n    aria-label=\"Example icon-button with a menu\"\r\n  >\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item>\r\n      <span routerLink=\"/home\" routerLinkActive=\"active\">Home</span>\r\n    </button>\r\n    <button mat-menu-item>\r\n      <span routerLink=\"/categories\" routerLinkActive=\"active\">Categories</span>\r\n    </button>\r\n    <button mat-menu-item>\r\n      <span routerLink=\"/countries\" routerLinkActive=\"active\">Countries</span>\r\n    </button>\r\n    <button mat-menu-item>\r\n      <span routerLink=\"/about\" routerLinkActive=\"active\">About</span>\r\n    </button>\r\n  </mat-menu>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cooking';\n}\n","<div>\n  <mat-toolbar color=\"accent\">\n    <span class=\"home\" routerLink=\"/home\">Cooking recipies</span>\n    <app-navi class=\"test\"></app-navi>\n  </mat-toolbar>\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { RecipeComponent } from './recipe/recipe.component';\r\nimport { NavigationComponent } from './navigation/navigation.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { NaviComponent } from './navi/navi.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CountriesComponent } from './countries/countries.component';\r\nimport { CountryComponent } from './country/country.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CategoryComponent,\r\n    CategoriesComponent,\r\n    RecipeComponent,\r\n    NavigationComponent,\r\n    NaviComponent,\r\n    AboutComponent,\r\n    HomeComponent,\r\n    CountriesComponent,\r\n    CountryComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatMenuModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Category, CategoryResponse } from '../models/category';\r\nimport { Recipies, RecipiesResponse } from '../models/recipies';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Recipe } from '../models/recipe';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RecipeService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCategories(): Observable<CategoryResponse> {\r\n    return this.http.get<CategoryResponse>(\r\n      'https://www.themealdb.com/api/json/v1/1/categories.php'\r\n    );\r\n  }\r\n\r\n  getCountries(): Observable<RecipiesResponse> {\r\n    return this.http.get<RecipiesResponse>(\r\n      'https://www.themealdb.com/api/json/v1/1/list.php?a=list'\r\n    );\r\n  }\r\n\r\n  getRecipiesByCategory(category: string): Observable<RecipiesResponse> {\r\n    return this.http.get<RecipiesResponse>(\r\n      'https://www.themealdb.com/api/json/v1/1/filter.php?' + category\r\n    );\r\n  }\r\n\r\n  getRecipiesByName(name: string): Observable<RecipiesResponse> {\r\n    return this.http.get<RecipiesResponse>(\r\n      'https://www.themealdb.com/api/json/v1/1/search.php?s=' + name\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Recipies } from '../models/recipies';\nimport { RecipeService } from '../services/recipe.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css'],\n})\nexport class CategoryComponent implements OnInit {\n  recipies$: Observable<Recipies[]>;\n  constructor(private http: RecipeService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    const category = this.route.snapshot.paramMap.get('category');\n    const test = this.http.getRecipiesByCategory(category);\n\n    this.recipies$ = test.pipe(\n      // tap(console.log),\n      map((e) => e.meals)\n    );\n  }\n}\n","<div class=\"grid\">\n  <mat-card\n    class=\"recipe-card\"\n    *ngFor=\"let item of recipies$ | async\"\n    [routerLink]=\"['/recipe', item.strMeal]\"\n  >\n    <mat-card-header class=\"recipe-header\">\n      <mat-card-title>{{ item.strMeal }}</mat-card-title>\n    </mat-card-header>\n    <img mat-card-image src=\"{{ item.strMealThumb }}\" />\n  </mat-card>\n</div>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Link 1</a>\n      <a mat-list-item href=\"#\">Link 2</a>\n      <a mat-list-item href=\"#\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>cooking</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CategoryComponent } from './category/category.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { RecipeComponent } from './recipe/recipe.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { CountriesComponent } from './countries/countries.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'categories', component: CategoriesComponent },\n  { path: 'category/:category', component: CategoryComponent },\n  { path: 'recipe/:name', component: RecipeComponent },\n  { path: 'countries', component: CountriesComponent },\n  { path: 'country/:category', component: CategoryComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Country } from '../models/country';\nimport { RecipeService } from '../services/recipe.service';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css'],\n})\nexport class CountriesComponent implements OnInit {\n  constructor(private http: RecipeService) {}\n  countries$: Observable<Country[]>;\n\n  ngOnInit(): void {\n    const test = this.http.getCountries();\n\n    this.countries$ = test.pipe(\n      tap(console.log),\n      map((e) => e.meals)\n    );\n  }\n}\n","<div class=\"mat-chip\">\n  <mat-chip-list aria-label=\"Fish selection\">\n    <mat-chip\n      [routerLink]=\"['/category', 'a=' + item.strArea]\"\n      *ngFor=\"let item of countries$ | async\"\n      >{{ item.strArea }}</mat-chip\n    >\n    <mat-chip color=\"primary\" selected>Primary fish</mat-chip>\n    <mat-chip color=\"accent\" selected>Accent fish</mat-chip>\n  </mat-chip-list>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}